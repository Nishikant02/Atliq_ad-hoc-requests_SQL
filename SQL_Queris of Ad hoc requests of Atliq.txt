Q1. Provide the list of markets in which customer "Atliq Exclusive" operates its
    business in the APAC region.

Query:- select market
        from dim_customer
        where Customer="Atliq Exclusive" and region="APAC";

Q2. What is the percentage of unique product increase in 2021 vs. 2020? The
    final output contains these fields,
    unique_products_2020
    unique_products_2021
    percentage_chg

QUery:-   With product as (SELECT p.*,f.fiscal_year 
        FROM dim_product p 
        join fact_gross_price f 
        on p.Product_code=f.product_code)

    SELECT
       count(CASE WHEN fiscal_year  = 2020 THEN product END) as unique_products_2020,
       count(CASE WHEN fiscal_year  = 2021 THEN product END) as unique_products_2021,
       round(((count(CASE WHEN fiscal_year = 2021 THEN product END) - count(CASE WHEN fiscal_year  = 2020 THEN product END))
    / count(CASE WHEN fiscal_year  = 2020 THEN product END)) * 100,2) as percentage_chg
     
  FROM product
     WHERE fiscal_year IN (2020, 2021);

Q.3 Provide a report with all the unique product counts for each segment and
   sort them in descending order of product counts. The final output contains
   2 fields,
  segment
  product_count

Query:-select segment,
           COUNT(DISTINCT(product_code)) AS product_count
       FROM dim_product
       GROUP BY segment
       ORDER by product_count DESC;

Q.4 Follow-up: Which segment had the most increase in unique products in
    2021 vs 2020? The final output contains these fields,
   segment
   product_count_2020
   product_count_2021
   difference
Query:- WITH unique_product AS
        (
         SELECT
      b.segment AS segment,
      COUNT(DISTINCT
          (CASE 
              WHEN fiscal_year = 2020 THEN a.product_code END)) AS product_count_2020,
       COUNT(DISTINCT
          (CASE 
              WHEN fiscal_year = 2021 THEN a.product_code END)) AS product_count_2021        
    FROM fact_sales_monthly AS a
    INNER JOIN dim_product AS b
    ON a.product_code = b.product_code
   GROUP BY b.segment
    )
   SELECT segment, product_count_2020, product_count_2021, (product_count_2021-product_count_2020) AS difference
   FROM unique_product
 ORDER BY difference DESC;
Q.5 Get the products that have the highest and lowest manufacturing costs.
    The final output should contain these fields,
    product_code,
    product,
    manufacturing_cost

Query SELECT  a.product_code AS product_code /*here a is alias for dim_product table*/,
         a.product AS product,
		 CONCAT('$',ROUND(b.manufacturing_cost,2)) AS manufacturing_cost /*here b is alias for fact_manufacturing_cost table*/
   FROM
  dim_product AS a 
  INNER JOIN
  fact_manufacturing_cost AS b
  ON a.product_code = b.product_code /* joining on key ie. product_code*/
  WHERE b.manufacturing_cost = (SELECT MAX(manufacturing_cost) FROM fact_manufacturing_cost) /* filter to fetch product having max manufacturing cost*/
  OR    b.manufacturing_cost = (SELECT MIN(manufacturing_cost) FROM fact_manufacturing_cost) /* filter to fetch product having min manufacturing cost*/
  ORDER BY b.manufacturing_cost DESC;

Q6.Generate a report which contains the top 5 customers who received an
  average high pre_invoice_discount_pct for the fiscal year 2021 and in the
  Indian market. The final output contains these fields,
  customer_code
  customer
  average_discount_percentage
Query:-SELECT a.customer_code ,
       b.customer,
       CONCAT(ROUND(AVG(pre_invoice_discount_pct)*100,2),'%') AS average_discount_percentage
FROM fact_pre_invoice_deductions AS a
INNER JOIN 
dim_customer AS b
ON a.customer_code = b.customer_code
WHERE market = 'India'
AND fiscal_year = 2021
GROUP BY customer, customer_code
ORDER BY AVG(pre_invoice_discount_pct) DESC
LIMIT 5;

Q.7.Get the complete report of the Gross sales amount for the customer “Atliq
Exclusive” for each month. This analysis helps to get an idea of low and
high-performing months and take strategic decisions.
The final report contains these columns:
Month
Year
Gross sales Amount 



Syntax:-SELECT 
       MONTHNAME(date) AS month_name,
       YEAR(date) AS year_, 
       CONCAT('$',ROUND(SUM(a.sold_quantity * b.gross_price)/1000000,2)) AS gross_sales_amount_millions /*value in millions*/
FROM fact_sales_monthly AS a
INNER JOIN fact_gross_price AS b
ON b.product_code = a.product_code
AND b.fiscal_year = a.fiscal_year
INNER JOIN dim_customer AS c
ON c.customer_code = a.customer_code
WHERE c.customer = 'Atliq Exclusive'
GROUP BY month_name, year_
ORDER BY year_;

Q.8.In which quarter of 2020, got the maximum total_sold_quantity? The final
output contains these fields sorted by the total_sold_quantity,
Quarter
total_sold_quantity


SELECT 
     case
	when date between '2019-09-01' and '2019-11-01' then 'Q1'
	when date between '2019-12-01' and '2020-02-01' then 'Q2'
	when date between '2020-03-01' and '2020-05-01' then 'Q3'
	when date between '2020-06-01' and '2020-09-01' then 'Q4'
end as quarters,
   sum(sold_quantity) as total_Sold_quantity
FROM fact_sales_monthly where fiscal_year=2020
group by quarters
order by total_sold_quantity desc;


Q.9 Which channel helped to bring more gross sales in the fiscal year 2021
and the percentage of contribution? The final output contains these fields,
channel
gross_sales_mln
percentage

Syntax:- WITH gross_sales AS
( 
 SELECT c.channel AS channel_,
        ROUND(SUM(b.gross_price*a.sold_quantity)/1000000,2) /* converting values to millions*/
 AS gross_sales_million
 FROM fact_sales_monthly AS a
 LEFT JOIN fact_gross_price AS b
 ON a.product_code = b.product_code
 AND a.fiscal_year = b.fiscal_year
LEFT JOIN dim_customer AS c
 ON 
 a.customer_code = c.customer_code
 WHERE a.fiscal_year = 2021
 GROUP BY c.channel
)

SELECT channel_,
       CONCAT('$',gross_sales_million) AS gross_sales_million,
	CONCAT(ROUND(gross_sales_million/ SUM(gross_sales_million) OVER()*100,2),'%') AS percentage
FROM gross_sales
ORDER BY percentage DESC;

Q.10.Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these fields, division product_code
Syntax:- 
    (
	SELECT b.division AS division,
		   b.product_code AS product_code,
		   b.product AS product,
		   SUM(a.sold_quantity) AS total_sold_quantity
	FROM fact_sales_monthly AS a
	INNER JOIN dim_product AS b
	ON a.product_code = b.product_code
	WHERE a.fiscal_year = 2021
	GROUP BY  b.division, b.product_code, b.product 
	ORDER BY total_sold_quantity DESC),
   top_sold_per_division AS (
  SELECT division,
	    product_code,
        product,
        total_sold_quantity,
        DENSE_RANK() OVER(PARTITION BY division ORDER BY total_sold_quantity DESC) AS rank_order /* using dense rank so that we can handle ties and still grab top 3 products*/
  FROM top_sold_products)
  SELECT * FROM top_sold_per_division
  WHERE rank_order <= 3;